name: Terraform Infra Plan Workflow
on:
  workflow_call:
    inputs:
      region:
        required: true
        type: string
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
  issues: write
  pull-requests: write
jobs:
  reusable-terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Git Clone the Repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::476114114107:role/github-oidc-role
          role-session-name: github-terraform-infra-provision-session
          aws-region: ${{ inputs.region }}
      - run: |
          TOKEN=/tmp/web_identity_token
          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq -r '.value' > $TOKEN
          export AWS_WEB_IDENTITY_TOKEN_FILE=$TOKEN >> $GITHUB_ENV
      - name: Terraform Install
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.3"
      - name: Terraform Init
        run: cd infra/int/${{ inputs.region }} && terraform init
      - name: Terraform Validate
        id: validate
        run: cd infra/int/${{ inputs.region }} && terraform validate -no-color
      - name: Terraform Plan
        id: plan
        run: cd infra/int/${{ inputs.region }} && terraform plan -no-color
        continue-on-error: true
      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })